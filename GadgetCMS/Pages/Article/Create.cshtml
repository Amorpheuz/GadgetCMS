@page
@using GadgetCMS.Areas.Identity.Data
@model GadgetCMS.Pages.Article.CreateModel
@inject UserManager<GadgetCMSUser> UserManager

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
    var user = await UserManager.GetUserAsync(User);
}

<h1>Create</h1>

<h4>Article</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form method="post" enctype="multipart/form-data" id="createForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Article.ArticleName" class="control-label"></label>
                <input asp-for="Article.ArticleName" class="form-control" />
                <span asp-validation-for="Article.ArticleName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Article.ArticleContent" class="control-label"></label>
                <div id="quill-container">
                    <div id="toolbar-container">
                        <span class="ql-formats">
                            <button class="ql-header" value="1"></button>
                            <button class="ql-header" value="2"></button>
                            <button class="ql-header" value="3"></button>
                            <button class="ql-blockquote"></button>
                        </span>
                        <span class="ql-formats">
                            <button class="ql-bold"></button>
                            <button class="ql-italic"></button>
                            <button class="ql-underline"></button>
                            <button class="ql-strike"></button>
                        </span>
                        <span class="ql-formats">
                            <button class="ql-direction" value="rtl"></button>
                            <select class="ql-align"></select>
                        </span>
                        <span class="ql-formats">
                            <select class="ql-font"></select>
                            <select class="ql-size"></select>
                        </span>
                        <span class="ql-formats">
                            <select class="ql-color"></select>
                            <select class="ql-background"></select>
                        </span>
                        <span class="ql-formats">
                            <button class="ql-script" value="sub"></button>
                            <button class="ql-script" value="super"></button>
                        </span>
                        <span class="ql-formats">
                            <button class="ql-list" value="ordered"></button>
                            <button class="ql-list" value="bullet"></button>
                            <button class="ql-indent" value="-1"></button>
                            <button class="ql-indent" value="+1"></button>
                        </span>
                        <span class="ql-formats">
                            <button class="ql-link"></button>
                            <button class="ql-image"></button>
                            <button class="ql-video"></button>
                        </span>
                        <span class="ql-formats">
                            <button class="ql-clean"></button>
                        </span>
                    </div>
                    <div id="editor-container"></div>
                </div>
                <input asp-for="Article.ArticleContent" class="form-control" value="0" hidden/>
                <span asp-validation-for="Article.ArticleContent" class="text-danger"></span>
            </div>
            <input asp-for="Article.ArticleAuthor" class="form-control" value="@user.Email" hidden />
            <input asp-for="Article.ArticleLastEditedBy" class="form-control" value="@user.Email" hidden />
            <div class="form-group">
                <label asp-for="Article.CategoryId" class="control-label"></label>
                <select asp-for="Article.CategoryId" class="form-control" asp-items="ViewBag.CategoryId" id="catSelect"></select>
            </div>
            <div class="form-group">
                <label class="control-label">Upload  Pictures</label>
                <div class="custom-file">
                    <input type="file" class="custom-file-input" accept="image/png, image/jpeg" id="upFiles" name="upFiles" multiple required>
                    <label class="custom-file-label" for="upFiles">Choose file</label>
                </div>
                <span class="text-danger" id="ImageCheck">
                    @if (ViewData["ImageCheck"] != null)
                    {
                        <text>No Pictures Selected</text>
                    }
                </span>
                <span asp-validation-for="ArticlePictures.ArticlePictureBytes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ArticlePictures.ArticlePictureCaption" class="control-label"></label>
                <input asp-for="ArticlePictures.ArticlePictureCaption" class="form-control" />
                <span asp-validation-for="ArticlePictures.ArticlePictureCaption" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="ArticlePictures.ArticleId" class="form-control" value="0" hidden />
                <span asp-validation-for="ArticlePictures.ArticleId" class="text-danger"></span>
            </div>
            <h4>Parameters</h4>
            <div id="paramList">
                @foreach (var item in Model.parameters)
                {
                    foreach (var miniItem in item)
                    {
                        <div class='form-group'>
                            <label class='control-label'>@miniItem.ParameterName</label>
                            <div class='input-group'>
                                <input type='text' name='vals' id='vals' class='form-control' required />
                                <div class='input-group-append'>
                                    <span class='input-group-text'>@miniItem.ParameterUnit</span>
                                </div>
                            </div>
                            <input type='text' name='valIds' id='valIds' value='@miniItem.ParameterId' hidden />
                        </div>
                    }
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" id="submiter" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index"> Back to List</a>
</div>
<script>
    document.getElementById("submiter").onclick = function () {
        if (document.getElementById("upFiles").files.length == 0) {
            document.getElementById("ImageCheck").innerHTML = "No Pictures Selected";
        }
    };
    document.getElementById("upFiles").oninput = function () {
        if (document.getElementById("upFiles").files.length != 0) {
            document.getElementById("ImageCheck").innerHTML = "";
        }
    }
</script>
<script>
    $(document).ready(function () {
        $("#catSelect").change(function () {
            var options = {};
            var catId = $(this).children("option:selected").val();
            options.url = "/article/Create?handler=FetchParameter&id=" + catId;
            options.type = "GET";
            options.datatype = "json";
            options.success = function (data) {
                $("#paramList").empty();
                data.forEach(function (element) {
                    element.forEach(function (innerElement) {
                        $("#paramList").append(
                            "<div class='form-group'>" +
                            "<label class='control-label'>" + innerElement.parameterName + " </label> " +
                            "<div class='input-group'><input type='text' name='vals' id='vals'  class='form-control' required />" +
                            "<div class='input-group-append'><span class='input-group-text'>" + innerElement.parameterUnit + "</span></div></div>" +
                            "<input type='text' name='valIds' id='valIds' value='" + innerElement.parameterId + "' hidden /></div>");
                    });
                });
            };
            options.error = function (xhr, status, error) {
                $("#paramList").html("Error while making Ajax call!");
                console.log("error!" + "\nAn AJAX error occured: " + status + "\nError: " + error);
            };
            $.ajax(options);
        });
    });
</script>
<script src="~/lib/quill/quill.min.js"></script>
<script>
    var quill = new Quill('#editor-container', {
        modules: {
            toolbar: '#toolbar-container'
        },
        placeholder: 'Enter Article Content',
        theme: 'snow'
    });

    var form = document.querySelector('#createForm');
    form.onsubmit = function () {
        var content = document.querySelector("input[name='Article.ArticleContent']");
        content.value = JSON.stringify(quill.getContents());
        alert(content.value);
    };
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
