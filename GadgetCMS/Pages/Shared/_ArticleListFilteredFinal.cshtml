@model Pages.Article.FilteredArticle

@{
    DateTime date = new DateTime();
    string GetPrettyDate(DateTime d)
    {
        // 1.
        // Get time span elapsed since the date.
        TimeSpan s = DateTime.Now.Subtract(d);

        // 2.
        // Get total number of days elapsed.
        int dayDiff = (int)s.TotalDays;

        // 3.
        // Get total number of seconds elapsed.
        int secDiff = (int)s.TotalSeconds;

        // 4.
        // Don't allow out of range values.
        if (dayDiff < 0 || dayDiff >= 31)
        {
            return null;
        }

        // 5.
        // Handle same-day times.
        if (dayDiff == 0)
        {
            // A.
            // Less than one minute ago.
            if (secDiff < 60)
            {
                return "just now";
            }
            // B.
            // Less than 2 minutes ago.
            if (secDiff < 120)
            {
                return "1 minute ago";
            }
            // C.
            // Less than one hour ago.
            if (secDiff < 3600)
            {
                return string.Format("{0} minutes ago",
                    Math.Floor((double)secDiff / 60));
            }
            // D.
            // Less than 2 hours ago.
            if (secDiff < 7200)
            {
                return "1 hour ago";
            }
            // E.
            // Less than one day ago.
            if (secDiff < 86400)
            {
                return string.Format("{0} hours ago",
                    Math.Floor((double)secDiff / 3600));
            }
        }
        // 6.
        // Handle previous days.
        if (dayDiff == 1)
        {
            return "yesterday";
        }
        if (dayDiff < 7)
        {
            return string.Format("{0} days ago",
                dayDiff);
        }
        if (dayDiff < 31)
        {
            return string.Format("{0} weeks ago",
                Math.Ceiling((double)dayDiff / 7));
        }
        return null;
    }

    string[] parametervalues;

    List<List<Data.ArticleParameter>> articleids_filtered = new List<List<Data.ArticleParameter>>();


    List<int> FilteredArticleListFinal = new List<int>();

    List<Data.ArticleParameter> articleid_temp = new List<Data.ArticleParameter>();

    List<int> articles_listInt = new List<int>();
    articles_listInt = Model.Articles.Select(c => c.ArticleId).ToList();

    parametervalues = Model.ParameterValues.Split(";");
    for (int i = 0; i < parametervalues.Length - 1; i++)
    {
        articleid_temp = Model.getValues(parametervalues[i]);
        articleids_filtered.Add(articleid_temp);
    }
}

@if (articleids_filtered != null)
{
    foreach (var articleidss in articleids_filtered)
    {
        foreach (var articleidsfetch in articleidss)
        {
            if (articles_listInt.Contains(Int32.Parse(articleidsfetch.ArticleId.ToString())))
            {

                //if (Model.FilteredArticleListFinal.Count > 0)
                //{
                if (!FilteredArticleListFinal.Contains(articleidsfetch.ArticleId))
                {
                    FilteredArticleListFinal.Add(articleidsfetch.ArticleId);


                    <div class="card mb-2">
                        <div class="card-body">

                            <div class="row">
                                <div class="col-md-9">
                                    <div class="row">
                                        <div class="col-sm-8">
                                            <p>@Model.Articles.Where(c => c.ArticleId == articleidsfetch.ArticleId).Select(a => a.ArticleAuthor).FirstOrDefault()</p>
                                        </div>
                                        <div class="col-sm-4">
                                            @{
                                                date = Model.Articles.Where(c => c.ArticleId == articleidsfetch.ArticleId).Select(a => a.ArticleCreated.ToLocalTime()).FirstOrDefault();
                                            }
                                            <p>@GetPrettyDate(date)</p>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <h6 class="font-weight-bold"><a asp-page="./Details" asp-route-id="@Model.Articles.Where(c => c.ArticleId == articleidsfetch.ArticleId).Select(d => d.ArticleId).FirstOrDefault()" class="stretched-link">@Model.Articles.Where(c => c.ArticleId == articleidsfetch.ArticleId).Select(a => a.ArticleName).FirstOrDefault()</a></h6>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <p class="text-muted">@Model.Articles.Where(c => c.ArticleId == articleidsfetch.ArticleId).Select(a => a.ArticleSubtitle).FirstOrDefault()</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3 d-flex justify-content-center">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            @{
                                                Data.Article article = Model.Articles.Where(c => c.ArticleId == articleidsfetch.ArticleId).First();
                                                var base64 = Convert.ToBase64String(article.ArticlePictures.First().ArticlePictureBytes);
                                                var imgSrc = $"data:image/gif;base64,{base64}";
                                            }
                                            <img src="@imgSrc" class="img-fluid" style="height:100px;" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>





                    @*<a asp-page="../Article/Details" asp-route-id="@articleidsfetch.ArticleId">@articleidsfetch.ArticleId</a> <br />*@
                }
                //}


            }
            //foreach (var articlesNameListFetchFiltered in Model.articles_list.Where(b => b.ArticleId == articleidsfetch.ArticleId))
            //{

            //}
        }
    }
}
else
{
    <h6>Error! Please Try Again</h6>
}