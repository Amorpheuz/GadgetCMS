@page
@model GadgetCMS.Pages.Review.DeleteModel

@{
    ViewData["Title"] = "Delete";
    Layout = "~/Pages/Shared/_Layout.cshtml";
    var articleContent = "quill.setContents(" + Model.Review.ReviewContent + ")";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Review</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Review.Article)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Review.Article.ArticleName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Review.GadgetCmsUser)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Review.GadgetCmsUser.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Review.ReviewRating)
        </dt>
        <dd class="col-sm-10">
            @await Component.InvokeAsync("RatingDisplay", new { articleId = Model.Review.ArticleId, userId = Model.Review.UserId })
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Review.ReviewContent)
        </dt>
        <dd class="col-sm-10">
            <div id="editor-container">
            </div>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Review.ReviewLastUpdate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Review.ReviewLastUpdate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Review.ReviewCreated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Review.ReviewCreated)
        </dd>
    </dl>

    <form method="post">
        <input type="hidden" asp-for="Review.UserId" />
        <input type="hidden" asp-for="Review.ArticleId" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-page="./Index">Back to List</a>
    </form>
</div>

<script src="~/lib/quill/quill.min.js"></script>
<script>
    var quill = new Quill('#editor-container', {
        placeholder: 'Loading Text....'
    });
    $(document).ready(function () {
        quill.enable(false);
        $(".ql-editor").css("padding", "0");
    });
    @Html.Raw(articleContent);
</script>
