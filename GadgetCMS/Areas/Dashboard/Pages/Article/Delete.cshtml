@page
@model GadgetCMS.Pages.Article.DeleteModel

@{
    ViewData["Title"] = "Delete";
    Layout = "../Shared/_Layout.cshtml";
    var articleContent = "quill.setContents("+Model.Article.ArticleContent+")";
}

<h3>Delete</h3>

<h4>Are you sure you want to delete this?</h4>
<hr />
<div>
    <h5>Rating</h5>
    @await Component.InvokeAsync("RatingDisplay", new { articleId = Model.Article.ArticleId, userId = "" })
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Article.ArticleName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Article.ArticleName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Article.ArticleSubtitle)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Article.ArticleSubtitle)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Article.ArticleLastUpdate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Article.ArticleLastUpdate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Article.ArticleCreated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Article.ArticleCreated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Article.ArticleContent)
        </dt>
        <dd class="col-sm-10">
            <div id="editor-container">
            </div>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Article.ArticleAuthor)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Article.ArticleAuthor)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Article.ArticleLastEditedBy)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Article.ArticleLastEditedBy)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Article.ArticleVisible)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Article.ArticleVisible)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Article.Featured)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Article.Featured)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Article.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Article.Category.CategoryName)
        </dd>
    </dl>

    <h5>Gallery</h5>

    @await Component.InvokeAsync("ArticlePicture", Model.Article.ArticleId)
    @await Component.InvokeAsync("ArticleParameter", Model.Article.ArticleId)
    @await Component.InvokeAsync("Review", Model.Article.ArticleId)
    <hr />
    <form method="post">
        <input type="hidden" asp-for="Article.ArticleId" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-page="../Articles">Back to List</a>
    </form>
</div>

<script src="~/lib/quill/quill.min.js"></script>
<script>
    var quill = new Quill('#editor-container', {
      placeholder: 'Loading Text....'
    });
    $(document).ready(function () {
        quill.enable(false);
        $(".ql-editor").css("padding","0");
    });
    @Html.Raw(articleContent);
</script>
