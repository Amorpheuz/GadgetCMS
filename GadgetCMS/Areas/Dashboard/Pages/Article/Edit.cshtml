@page "{PictureId?}"
@using GadgetCMS.Areas.Identity.Data
@model GadgetCMS.Pages.Article.EditModel
@inject UserManager<GadgetCMSUser> UserManager

@{
    ViewData["Title"] = "Edit";
    Layout = "../Shared/_Layout.cshtml";
    var articleContent = "quill.setContents(" + Model.Article.ArticleContent + ")";
    var user = await UserManager.GetUserAsync(User);
    var i = 0;
}

<h3>Edit</h3>

<hr />
<div class="row">
    <div class="col-md-12">
        <form method="post" enctype="multipart/form-data" id="createForm">
            <input type="hidden" asp-for="Article.ArticleId" />
            <div class="card mb-2">
                <div class="card-body">
                    <div class="form-row">
                        <div class="col-sm-2">
                            <h4>Article - Edit</h4>
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        </div>
                        <div class="form-group col pt-2">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input" asp-for="Article.ArticleVisible">
                                <label class="custom-control-label" asp-for="Article.ArticleVisible">Set Article Visible</label>
                            </div>
                            <span asp-validation-for="Article.ArticleVisible" class="text-danger"></span>
                        </div>
                        <div class="form-group col pt-2">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input" asp-for="Article.Featured">
                                <label class="custom-control-label" asp-for="Article.Featured">Set Article Featured</label>
                            </div>
                            <span asp-validation-for="Article.Featured" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col">
                            <label asp-for="Article.ArticleName" class="control-label"></label>
                            <input asp-for="Article.ArticleName" class="form-control" />
                            <span asp-validation-for="Article.ArticleName" class="text-danger"></span>
                        </div>
                        <div class="form-group col">
                            <label asp-for="Article.CategoryId" class="control-label"></label>
                            <select asp-for="Article.CategoryId" class="form-control" asp-items="ViewBag.CategoryId" id="catSelect" readonly></select>
                            <small class="form-text text-muted">Select a Category to Load paramerters for that Category.</small>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col">
                            <label asp-for="Article.ArticleSubtitle" class="control-label"></label>
                            <input asp-for="Article.ArticleSubtitle" class="form-control" />
                            <span asp-validation-for="Article.ArticleSubtitle" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col">
                            <label asp-for="Article.ArticleContent" class="control-label"></label>
                            <div id="quill-container">
                                <div id="toolbar-container">
                                    <span class="ql-formats">
                                        <button class="ql-header" value="1"></button>
                                        <button class="ql-header" value="2"></button>
                                        <button class="ql-header" value="3"></button>
                                        <button class="ql-blockquote"></button>
                                    </span>
                                    <span class="ql-formats">
                                        <button class="ql-bold"></button>
                                        <button class="ql-italic"></button>
                                        <button class="ql-underline"></button>
                                        <button class="ql-strike"></button>
                                    </span>
                                    <span class="ql-formats">
                                        <button class="ql-direction" value="rtl"></button>
                                        <select class="ql-align"></select>
                                    </span>
                                    <span class="ql-formats">
                                        <select class="ql-font"></select>
                                        <select class="ql-size"></select>
                                    </span>
                                    <span class="ql-formats">
                                        <select class="ql-color"></select>
                                        <select class="ql-background"></select>
                                    </span>
                                    <span class="ql-formats">
                                        <button class="ql-script" value="sub"></button>
                                        <button class="ql-script" value="super"></button>
                                    </span>
                                    <span class="ql-formats">
                                        <button class="ql-list" value="ordered"></button>
                                        <button class="ql-list" value="bullet"></button>
                                        <button class="ql-indent" value="-1"></button>
                                        <button class="ql-indent" value="+1"></button>
                                    </span>
                                    <span class="ql-formats">
                                        <button class="ql-link"></button>
                                        <button class="ql-image"></button>
                                        <button class="ql-video"></button>
                                    </span>
                                    <span class="ql-formats">
                                        <button class="ql-clean"></button>
                                    </span>
                                </div>
                                <div id="editor-container"></div>
                            </div>
                            <input asp-for="Article.ArticleContent" class="form-control" value="0" hidden />
                            <span asp-validation-for="Article.ArticleContent" class="text-danger"></span>
                        </div>
                    </div>
                    <input asp-for="Article.ArticleAuthor" class="form-control" value="@Model.Article.ArticleAuthor" hidden />
                    <input type="text" asp-for="Article.ArticleCreated" class="form-control" value="@Model.Article.ArticleCreated.ToString()" hidden />
                    <input asp-for="Article.ArticleEditLock" class="form-control" value="@Model.Article.ArticleEditLock" hidden />
                    <input asp-for="Article.ArticleRating" class="form-control" value="@Model.Article.ArticleRating" hidden />
                    <input asp-for="Article.ArticleLastEditedBy" class="form-control" value="@user.Email" hidden />
                </div>
            </div>
            <h4>Parameters</h4>
            <div id="paramList">
                @foreach (var item in Model.ListParameters)
                {
                    <h5>@item.First().Parameter.ParentParameter.ParentParameterName</h5>
                    <div class="card-columns">
                        @foreach (var miniItem in item)
                        {
                            <div class="card">
                                <div class="card-body">
                                    <div class='form-group'>
                                        <label class='control-label'>@miniItem.Parameter.ParameterName</label>
                                        <div class='input-group'>
                                            <input asp-for="@Model.ArticleParameters[i].ParameterVal" class='form-control' />
                                            <div class='input-group-append'>
                                                <span class='input-group-text'>@miniItem.Parameter.ParameterUnit</span>
                                            </div>
                                        </div>
                                        <small class="form-text text-muted">@miniItem.Parameter.ParameterDescription</small>
                                    </div>
                                    <input asp-for="@Model.ArticleParameters[i].ParameterId" value="@miniItem.ParameterId" hidden />
                                    <input asp-for="@Model.ArticleParameters[i].ArticleId" value="@miniItem.ArticleId" hidden />
                                </div>
                            </div>
                            i++;
                        }
                    </div>
                }
            </div>
            <div class="col-md-3">
                <h4>Pictures</h4>
            </div>
            <div class="row mb-2">
                <div class="col-md-3">
                    <div class="custom-file mr-2 mt-1">
                        <input type="file" class="custom-file-input" id="upImages" name="upImages" multiple>
                        <label class="custom-file-label" for="upImages">Choose Images</label>
                    </div>
                </div>
                <div class="col-md-6">
                    <input type="text" class="form-control mt-1" id="upCaption" name="upCaption" placeholder="Enter Captions seperated by ;"/>
                </div>
                <div class="col-md-1">
                    <button type="button" class="btn btn-primary" onclick="addImage()"><i class="fa fa-plus" aria-hidden="true"></i></button>
                </div>
                <div class="col-md-2">
                    <p class="text-danger" id="errorImage"></p>
                </div>
            </div>
            <div class="card-columns" id="picCollection">
                @foreach (var item in Model.Article.ArticlePictures)
                {
                    var ider = "image" + item.ArticlePictureId;
                    <div class="card p-2" id="@ider">
                        @{
                            var base64 = Convert.ToBase64String(item.ArticlePictureBytes);
                            var imgSrc = $"data:image/gif;base64,{base64}";
                        }
                        <img class="img-thumbnail img-fluid" src="@imgSrc" /><br />
                        <div class="d-flex justify-content-center mt-1">
                            <button type="button" class="btn btn-danger" onclick="delImage(@item.ArticlePictureId)">Delete</button>
                        </div>
                    </div>
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Make Changes" class="btn btn-primary" id="submiter" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-page="../Articles">Back to List</a> | <a asp-page="/Article/Details" asp-route-id="@Model.Article.ArticleId">Details</a>
</div>

<script>
    function delImage(PictureId) {
        var options = {};
        options.url = "/Dashboard/Article/Edit/" + PictureId + "?handler=DeletePic";
        options.type = "POST";
        options.contentType = "application/json";
        options.dataType = "json";
        options.beforeSend = function (xhr) {
            xhr.setRequestHeader("RequestVerificationToken",
                $('input:hidden[name="__RequestVerificationToken"]').val());
        };
        options.success = function (data) {
            if (data != "fail") {
                $("" + data).remove();
            }
        };
        options.error = function () {
            alert("Error while making Ajax call!");
        };
        $.ajax(options);
    }

    function addImage() {
        var formData = new FormData();
        var totalFiles = document.getElementById("upImages").files.length;
        for (var i = 0; i < totalFiles; i++) {
            var file = document.getElementById("upImages").files[i];
            formData.append("UploadImages", file);
        }
        var captions = $('#upCaption').val();
        formData.append("UploadCaptions", captions);
        var options = {};
        options.url = "/Dashboard/Article/Edit?handler=AddPic";
        options.type = "POST";
        options.data = formData;
        options.processData = false;
        options.contentType = false;
        options.beforeSend = function (xhr) {
            xhr.setRequestHeader("RequestVerificationToken",
                $('input:hidden[name="__RequestVerificationToken"]').val());
        };
        options.success = function (data) {
            if (jQuery.type(data) === "string") {                                    
                $('#errorImage').empty();
                $('#errorImage').append(data);
                if (data == "No Images Selected") {
                    $('#upImages').addClass('is-invalid');
                }
                else {
                    $('#errorImage').addClass("is-invalid");
                }
            }
            else {
                $('#picCollection').empty();
                data.forEach(function (element) {
                    var imageId = "image" + element.pictureId;
                    var imageSrc = "data:image/gif;base64," + element.base64Str;
                    $('#picCollection').append(
                        "<div class='card p-2' id='" + imageId + "'>" +
                            "<img class='img-thumbnail img-fluid' src='" + imageSrc + "' /><br />" +
                            "<div class='d-flex justify-content-center mt-1'>" +
                                "<button type='button' class='btn btn-danger' onclick='delImage(" + element.pictureId + ")'>Delete</button>" +
                            "</div>" +
                        "</div>"
                    );
                });
            }
        };
        options.complete = function () {
            //Complete
        };
        options.error = function () {
            alert("Error while making Ajax call!");
        };
        $.ajax(options);
    }
</script>
<script src="~/lib/quill/quill.min.js"></script>
<script>
    var quill = new Quill('#editor-container', {
        modules: {
            toolbar: '#toolbar-container'
        },
        placeholder: 'Enter Article Content',
        theme: 'snow'
    });

    var form = document.querySelector('#createForm');
    form.onsubmit = function () {
        var content = document.querySelector("input[name='Article.ArticleContent']");
        content.value = JSON.stringify(quill.getContents());
    };
    @Html.Raw(articleContent);
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
